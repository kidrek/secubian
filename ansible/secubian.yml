---
- name: Secubian
  hosts: all
  become: yes
  
  vars:
      casesDir: "/home/{{ ansible_user }}/Documents/Cases"
      toolsDir: "/home/{{ ansible_user }}/Documents/Tools"
      documentationDir: "/home/{{ ansible_user }}/Documents/Documentation"
      playbooksDir: "/home/{{ ansible_user }}/Documents/Playbooks"
      DFIR_toolsDir: "{{ toolsDir }}/DFIR"
      OSINT_toolsDir: "{{ toolsDir }}/OSINT"
      docker_compose_version: "v2.11.1"
      keepass_db_path: "/home/{{ ansible_user }}/Documents/secubian.kdbx"
      keepass_db_password: "secubian"

  tasks: 
   - name: System upgrade
     ansible.builtin.shell: apt update; apt upgrade -y;

   - name: create directory if they don't exist
     file:
       path: "{{ item }}"
       state: directory
       owner: "{{ ansible_user }}"
       group: "{{ ansible_user }}"
       mode: 0775
     loop:
       - "{{ casesDir }}"
       - "{{ DFIR_toolsDir }}"
       - "{{ DFIR_toolsDir }}/analyse"
       - "{{ DFIR_toolsDir }}/analyse/rules"
       - "{{ DFIR_toolsDir }}/analyse/tools"
       - "{{ DFIR_toolsDir }}/analyse/tools/windows_binary"
       - "{{ DFIR_toolsDir }}/analyse/tools/windows_evtx"
       - "{{ DFIR_toolsDir }}/collecte"
       - "{{ DFIR_toolsDir }}/collecte/linux"
       - "{{ DFIR_toolsDir }}/collecte/windows"
       - "{{ DFIR_toolsDir }}/data_processing"
       - "{{ DFIR_toolsDir }}/report"
       - "{{ OSINT_toolsDir }}"
       - "{{ OSINT_toolsDir }}/domains"
       - "{{ playbooksDir }}"

   - include_tasks: tasks/pyenv.yml
   - include_tasks: tasks/requirements_packages.yml
   - include_tasks: tasks/gnome.yml
   - include_tasks: tasks/i3.yml
   - include_tasks: tasks/keepassXC_create_db.yml
   - include_tasks: tasks/zsh.yml
   - include_tasks: tasks/vscode.yml
   - include_tasks: tasks/firefox.yml
   - include_tasks: tasks/docker.yml
   - include_tasks: tasks/draw_io.yml
   - include_tasks: tasks/glance.yml
   - include_tasks: tasks/n8n.yml
   - include_tasks: tasks/portainer.yml
   - include_tasks: tasks/secubian-jupyternotebook.yml
   - include_tasks: tasks/sphinx-wiki.yml
   - include_tasks: tasks/libretranslate.yml
   - include_tasks: tasks/detection/rules/sigma.yml
   - include_tasks: tasks/detection/rules/yara.yml
   - include_tasks: tasks/detection/suricata.yml
   - include_tasks: tasks/forensic/bulk_extractor.yml
   - include_tasks: tasks/forensic/capa.yml
   - include_tasks: tasks/forensic/CIRCL_Hashlookup.yml
   - include_tasks: tasks/forensic/cyberchef.yml
   - include_tasks: tasks/forensic/didierStevens.yml
   - include_tasks: tasks/forensic/IRISWeb.yml
   - include_tasks: tasks/forensic/log2timeline.yml
   - include_tasks: tasks/forensic/loki.yml
   - include_tasks: tasks/forensic/mvt.yml
   - include_tasks: tasks/forensic/elk.yml
   - include_tasks: tasks/forensic/timesketch.yml
   - include_tasks: tasks/forensic/uac.yml
   - include_tasks: tasks/forensic/velociraptor.yml
   - include_tasks: tasks/forensic/volatility.yml
   - include_tasks: tasks/forensic/volatility3.yml
   - include_tasks: tasks/forensic/zircolite.yml
   - include_tasks: tasks/osint/blackbird.yml
   - include_tasks: tasks/osint/ct-exposer.yml
   - include_tasks: tasks/osint/spiderfoot.yml
   - include_tasks: tasks/osint/theharvester.yml
   - include_tasks: tasks/debian_hardening.yml

   - name: Install - AV Security tools
     apt:
       name: 
         - clamav
       state: present

   - name: Install - Forensic Python2 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         #- dissect
         - docx2txt
         - evtxtract
         - lxml
         - officedissector
         - peepdf
         - pillow
       virtualenv: "$HOME/.pyenv/versions/2.7.18"
       virtualenv_command: $HOME/.pyenv/bin/pyenv virtualenv 2.7.18

   - name: Install - Forensic Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - "{{ item.package }}"
       virtualenv: "$HOME/.pyenv/versions/{{ item.pythonVersion }}"
       virtualenv_command: "$HOME/.pyenv/bin/pyenv virtualenv {{ item.pythonVersion }}"
     with_items:
       - { package: "capstone", pythonVersion: "3.9.18" }  
       - { package: "eml_parser", pythonVersion: "3.9.18" }
       - { package: "extract-msg", pythonVersion: "3.9.18" }
       - { package: "lnkparse3", pythonVersion: "3.9.18" }  #  Windows Shortcut file (LNK) parser
       - { package: "msg_parser[rtf]", pythonVersion: "3.9.18" }
       - { package: "oletools", pythonVersion: "3.9.18" }
       - { package: "peepdf", pythonVersion: "3.9.18" }
       - { package: "pillow", pythonVersion: "3.9.18" }
       - { package: "registryspy", pythonVersion: "3.8.18" }


   - name: Install - Forensic Security tools
     apt:
       name: 
         - binwalk
         - chntpw
         - dc3dd
         - exiftool
         - extundelete 
         - foremost
         - fq                 # jq like tool focused on binary
         - gddrescue
         - hexedit
         - libesedb-utils     # tool to read Extensible Storage Engine (ESE) Database File (.edb) in Microsoft OS
         - libevtx-utils
         - libewf-dev
         - libguestfs-tools
         - libvshadow-utils
         - pst-utils
         - python3-ssdeep
         - scalpel
         - sleuthkit
         - sqlitebrowser
         - testdisk
         - thunderbird      # to analyse email box
       state: present

   - name: Install - Forensic Security MetaPackage - Debian
     apt:
       name: 
         - forensics-full
         - forensics-extra
       state: present
     when: (ansible_distribution == 'Debian')

   - name: Install - Forensic Security MetaPackage - Ubuntu
     apt:
       name: 
         - forensics-all
       state: present
     when: (ansible_distribution == 'Ubuntu')


   - name: "Install - Forensic Security tools (Github.com)"
     become_user: "{{ ansible_user }}"
     git:
       repo: "{{ item.repo }}"
       accept_hostkey: yes
       dest: "{{ item.dest }}"
       recursive: yes
       force: yes
     with_items:
       - { repo: "https://github.com/JPCERTCC/LogonTracer.git", dest: "{{ DFIR_toolsDir }}/analyse/tools/windows_evtx/LogonTracer" }
       - { repo: "https://github.com/countercept/chainsaw.git", dest: "{{ DFIR_toolsDir }}/analyse/tools/windows_evtx/chainsaw" }

   - name: Install - Network Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - scapy
         - setuptools
       virtualenv: "$HOME/.pyenv/versions/3.9.18"
       virtualenv_command: "$HOME/.pyenv/bin/pyenv virtualenv 3.9.18"

   - name: Install - Network Security tools
     apt:
       name: 
         - network-manager-openvpn-gnome
         - nmap
         - openvpn
         - tcpdump
         - tshark
         - wireshark
       state: present

   - name: Install - OSINT Python modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - "{{ item.package }}"
       virtualenv: "$HOME/.pyenv/versions/{{ item.pythonVersion }}"
       virtualenv_command: "$HOME/.pyenv/bin/pyenv virtualenv {{ item.pythonVersion }}"
     with_items:
       - { package: "bbot", pythonVersion: "3.9.18" }  # https://github.com/blacklanternsecurity/bbot
       - { package: "holehe", pythonVersion: "3.9.18" }
       - { package: "maigret", pythonVersion: "3.8.18" }

   - name: Install - Pentest tools
     apt:
       name: 
         - cewl
         - ffuf
         - fierce
         - hashcat
         - john
         - macchanger
         #- nikto         # not in default debian repository
         - proxychains
         - proxychains4
         - socat
         - sqlmap
         - whatweb
       state: present

   - name: Install - Malware Analysis
     apt:
       name: 
         - droidlysis
         - strace
       state: present

   - name: Install - Malware Analysis Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - defang               # https://pypi.org/project/defang/
         - quicksand            # https://github.com/tylabs/quicksand
         #- stringsifter~=2.0    # https://github.com/mandiant/stringsifter  <-- pb durant l'installation
         - XLMMacroDeobfuscator # https://github.com/DissectMalware/XLMMacroDeobfuscator
       virtualenv: "$HOME/.pyenv/versions/3.9.18"
       virtualenv_command: "$HOME/.pyenv/bin/pyenv virtualenv 3.9.18"

   - name: Download SANS Documentation
     copy: 
      src: "./files/documentation/" 
      dest: "{{ documentationDir }}" 
      owner: "{{ ansible_user }}" 
      group: "{{ ansible_user }}" 
      mode: 0644

   - name: "SHELL | Add aliases"
     become_user: "{{ ansible_user }}"
     lineinfile:
       dest: "~/.aliases"
       create: yes
       mode: 0644
       line: "alias {{ item.alias }}='{{ item.commandLine }}'"
       regexp: "^alias {{ item.alias }}="
     with_items:
       - { alias: "ll", commandLine: "ls -la" }

   #- name: Docker disable auto start all containers
   #  ansible.builtin.shell: docker update --restart=no $(docker ps -a -q) 2>/dev/null;
   #  ignore_errors: true
     
   - name: Remove useless packages from the cache
     ansible.builtin.apt:
       autoclean: yes
