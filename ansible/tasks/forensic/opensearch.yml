############# OPENSEARCH AND DASHBOARD ###############

- name: "OpenSearch tool | copy csv_to_json python script to CASES directort"
  become_user: "{{ ansible_user }}"
  ansible.builtin.template: 
    src  : ../../files/csv_to_json.py 
    dest : "{{ casesDir }}"

- name: "OpenSearch | Update cache and Install requirements"
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - lsb-release 
      - ca-certificates 
      - curl 
      - default-jre
      - gnupg2
    state: latest
    update_cache: true

- name: "OpenSearch | Add GPG key"
  ansible.builtin.get_url:
    url: https://artifacts.opensearch.org/publickeys/opensearch.pgp
    dest: /usr/share/keyrings/opensearch-keyring

- name: "OpenSearch | Apt source"
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    state: present
  with_items:
    - { repo: "deb [signed-by=/usr/share/keyrings/opensearch-keyring] https://artifacts.opensearch.org/releases/bundle/opensearch/2.x/apt stable main" }
    - { repo: "deb [signed-by=/usr/share/keyrings/opensearch-keyring] https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.x/apt stable main" }

## Default login/mdp admin/admin
- name: "OpenSearch | Update cache and Install OpenSearch"
  ansible.builtin.apt:
    name:
      - opensearch
      - opensearch-dashboards
    state: latest
    update_cache: true

#- name: "OpenSearch | Update cache and Install OpenSearch"
#  become: true
#  ansible.builtin.shell: "OPENSEARCH_INITIAL_ADMIN_PASSWORD=Secub1@nSecub1@n apt install opensearch"


- name: "OpenSearch | Modify configuration"
  ansible.builtin.lineinfile:
    path: /etc/opensearch/opensearch.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.value }}"
  with_items:
    - { regex: '^network\.host', value: 'network.host: 0.0.0.0' }
    - { regex: '^discovery\.type', value: 'discovery.type: single-node' }
    - { regex: '^plugins\.security\.disabled', value: 'plugins.security.disabled: false' }

- name: "OpenSearch Dashboard | Modify configuration"
  ansible.builtin.lineinfile:
    path: /etc/opensearch-dashboards/opensearch_dashboards.yml
    regexp: "{{ item.regex }}"
    line: "{{ item.value }}"
  with_items:
    - { regex: '^server\.port', value: 'server.port: 5601' }
    - { regex: '^server\.host', value: 'server.host: 0.0.0.0' }

############# FILEBEAT ###############
## Source : https://www.elastic.co/guide/en/beats/filebeat/7.17/setup-repositories.html

- name: "OpenSearch | Add Filebeat"
  ansible.builtin.get_url:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    dest: /usr/share/keyrings/elastic-filebeat-keyring

- name: "OpenSearch | Add Filebeat apt source"
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/elastic-filebeat-keyring] https://artifacts.elastic.co/packages/oss-7.x/apt stable main"
    state: present

- name: "Opensearch | Limit filebeat package to version 7"
  copy: 
    dest: "/etc/apt/preferences.d/00filebeat"
    content: |
      Package: filebeat
      Pin: version 7*
      Pin-Priority: 1001

- name: "OpenSearch | Update cache and Install Filebeat"
  ansible.builtin.apt:
    name:
      - filebeat
    state: latest
    update_cache: true

- name: "OpenSearch | Create Filebeat inputs.d"
  file:
    path: "/etc/filebeat/inputs.d"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0775

- name: "OpenSearch | set Filebeat configuration"
  ansible.builtin.template: 
    src  : "{{ item.src }}"
    dest : "{{ item.dst }}"
  with_items:
    - { src: "../../files/filebeat/filebeat.yml", dst: "/etc/filebeat/filebeat.yml" }
    - { src: "../../files/filebeat/inputs_dfir.yml", dst: "/etc/filebeat/inputs.d/dfir.yml" }

- name: "OpenSearch | Enable Filebeat service"
  ansible.builtin.systemd:
    name: filebeat
    state: started
    enabled: true

############# LOGSTASH ###############
- name: "Logstash | Add GPG key"
  ansible.builtin.get_url:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    dest: /usr/share/keyrings/elastic-logstash-keyring

- name: "Logstash | Apt source"
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    state: present
  with_items:
    - { repo: "deb [signed-by=/usr/share/keyrings/elastic-logstash-keyring] https://artifacts.elastic.co/packages/8.x/apt stable main" }
  ignore_errors: true

- name: "Logstash | Limit package version to 8"
  copy: 
    dest: "/etc/apt/preferences.d/00logstash"
    content: |
      Package: logstash
      Pin: version 8*
      Pin-Priority: 1001

- name: "Logstash | Install package"
  ansible.builtin.apt:
    name:
      - logstash
    state: latest
    update_cache: true
  ignore_errors: true

- name: "Logstash | copy logstash.yml on remote host"
  ansible.builtin.template: 
    src  : ../../files/logstash/logstash.conf
    dest : "/etc/logstash/conf.d/logstash.conf"

#- name: "Logstash | Enable Logstash service"
#  ansible.builtin.systemd:
#    name: logstash
#    state: started
#    enabled: true

## https://www.middlewareinventory.com/blog/ansible-find-examples/
- name : "Logstash | Find logstash-plugin binary"
  become: true
  find:
    paths: /usr/share/
    patterns: 'logstash-plugin'
    file_type: "file"
    recurse: yes
  register: output

- name : "Logstash | DEBUG show logstash-plugin binary filepath"
  debug:
    msg: "{{ output.files[0].path}}"

- name: "Logstash | Install opensearch plugin"
  become: true
  ansible.builtin.shell: "{{ item }} install logstash-output-opensearch"
  with_items: "{{ output.files[0].path}}"
